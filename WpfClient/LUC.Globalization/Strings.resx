<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Label_AddToIgnoreFolders" xml:space="preserve">
    <value>Add folder to the list of ignored directories</value>
  </data>
  <data name="Label_Attention" xml:space="preserve">
    <value>Attention</value>
  </data>
  <data name="Label_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Label_ChangeFolder" xml:space="preserve">
    <value>Change folder</value>
  </data>
  <data name="Label_ChangeSyncFolder" xml:space="preserve">
    <value>Change sync folder</value>
  </data>
  <data name="Label_CurrentFolder" xml:space="preserve">
    <value>Current folder:</value>
  </data>
  <data name="Label_DeleteFolder" xml:space="preserve">
    <value>Delete folder</value>
  </data>
  <data name="Label_Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="Label_ExitConfirmation" xml:space="preserve">
    <value>Exit confirmation</value>
  </data>
  <data name="Label_Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Label_Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Label_LogInto" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="Label_LogOut" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="Label_LogoutConfirmation" xml:space="preserve">
    <value>Logout confirmation</value>
  </data>
  <data name="Label_Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="Label_Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Label_PleaseWait" xml:space="preserve">
    <value>Please wait...</value>
  </data>
  <data name="Label_RememberMe" xml:space="preserve">
    <value>Remember me</value>
  </data>
  <data name="Label_SelectFolderForIgnore" xml:space="preserve">
    <value>Selective sync</value>
  </data>
  <data name="Label_UploadServerDeletedFolder" xml:space="preserve">
    <value>Upload my folder to the server</value>
  </data>
  <data name="Label_TokenExpired" xml:space="preserve">
    <value>Access token was expired or incorrect access token, please login again.</value>
  </data>
  <data name="MessageTemplate_CantCreateBucket" xml:space="preserve">
    <value>Can not create directory {0}. Please check access to parent folder.</value>
  </data>
  <data name="MessageTemplate_CantLogin" xml:space="preserve">
    <value>Can not login. Please contact our support team. Status code: {0}</value>
  </data>
  <data name="MessageTemplate_LockedFile" xml:space="preserve">
    <value>File {0} is already locked by user {1}. Contacts: {2}</value>
  </data>
  <data name="MessageTemplate_RenamedFile" xml:space="preserve">
    <value>File {0} was renamed to {1}. Probably it is locked on server by another user or folder with the same name already exists.</value>
  </data>
  <data name="MessageTemplate_ServerAndLocalTimeIsDifferent" xml:space="preserve">
    <value>Server time and local time is different. Please try sync your local time. Your UTC time is {0}, server UTC time is {1}. Please login again later.</value>
  </data>
  <data name="Message_CreatedFolderOffline" xml:space="preserve">
    <value>The folder {0} doesn't exist on the server. If you click "Yes", your folder will be uploaded to the server, if "No", it will be deleted on the current computer, if "Cancel", it will be added to the list of folders that are ignored when synchronizing with the server.</value>
  </data>
  <data name="Message_DoYouWantExitNow" xml:space="preserve">
    <value>Do you want exit now?</value>
  </data>
  <data name="Message_DoYouWantLogoutNow" xml:space="preserve">
    <value>Do you want to logout now?</value>
  </data>
  <data name="Message_NoConnection" xml:space="preserve">
    <value>No connection at the moment...</value>
  </data>
  <data name="Message_RootFolderDoesNotExist" xml:space="preserve">
    <value>Root folder does not exist. Please login again.</value>
  </data>
  <data name="Message_WrongLoginOrPassword" xml:space="preserve">
    <value>Wrong login or password</value>
  </data>
  <data name="Title_SelectAction" xml:space="preserve">
    <value>Select action</value>
  </data>
</root>